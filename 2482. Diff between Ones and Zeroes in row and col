 int m = grid.size();
    int n = grid[0].size();

    // Step 1: Calculate the number of ones and zeros for each row and each column
    std::vector<int> onesRow(m, 0);
    std::vector<int> zerosRow(m, 0);
    std::vector<int> onesCol(n, 0);
    std::vector<int> zerosCol(n, 0);

    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            if (grid[i][j] == 1) {
                onesRow[i]++;
                onesCol[j]++;
            } else {
                zerosRow[i]++;
                zerosCol[j]++;
            }
        }
    }

    // Step 2: Create the difference matrix diff
    std::vector<std::vector<int>> diff(m, std::vector<int>(n, 0));

    for (int i = 0; i < m; ++i) {
        for (int j = 0; j < n; ++j) {
            diff[i][j] = onesRow[i] + onesCol[j] - zerosRow[i] - zerosCol[j];
        }
    }

    return diff;
}
