#include <unordered_map>

bool isAnagram(std::string s, std::string t) {
    // Check if the lengths of the two strings are different
    if (s.length() != t.length()) {
        return false;
    }

    // Use unordered_map to store character frequencies
    std::unordered_map<char, int> charFrequency;

    // Count frequencies of characters in string s
    for (auto &c : s) {
        charFrequency[c]++;
    }

    // Subtract frequencies of characters in string t
    for (auto &c : t) {
        charFrequency[c]--;
    }

    // If all frequencies are zero, the strings are anagrams
    for (const auto &entry : charFrequency) {
        if (entry.second != 0) {
            return false;
        }
    }

    return true;
}
